#!/usr/bin/gawk -f
# Converts variant of MediaWiki to DocBook
# Ben Lynn

func open_section(tag) {
    stack[stack_i] = tag
    stack_i = stack_i + 1
    print "<"tag">"
}

func close_section() {
    close_block();
    stack_i = stack_i - 1
    print "</"stack[stack_i]">"
}

func close_until(i) {
    close_lists()
    while (stack_i > i) {
	close_section()
    }
}

func close_block() {
  if (block_state != "") {
      print "</"block_state">"
      block_state = ""
  }
}

func in_block(s) {
  if (block_state != s) {
    close_block()
    print "<"s">"
    block_state = s
  }
}

func ul_item() {
    if (in_list) {
	close_block()
	print "</listitem>"
    } else {
	in_list = 1
	print "<itemizedlist>"
    }
    print "<listitem>"
}

func close_lists() {
    if (in_list) {
	close_block()
	print "</listitem>"
	print "</itemizedlist>"
	in_list = 0
	list_indent = 0
    }
}

BEGIN {
    stack_i = 0
}

# empty lines = close block
/^ *$/ {
    close_block()
    next
}

# lists/stuff that goes in <screen> tags
# if matches a previous indentation level it's a list
# otherwise it should have higher indentation level
# and belongs in <screen> tag

/^ / {
    n = length()
    # must use gensub because length() doesn't seem to change after sub()
    tmp = gensub("^ *", "", 1)
    n -= length(tmp)
    $0 = tmp
    if (list_indent == n) {
	was_list_item = 1
    } else if (list_indent < n) {
	in_block("screen")
	print $0
	next
    } else {
	print "funny indent level"
	print $0
	next
    }
}

/^-/ {
    was_list_item = 1
    n = length()
    # must use gensub because length() doesn't seem to change after sub()
    tmp = gensub("^- *", "", 1)
    $0 = tmp
    n -= length(tmp)
    list_indent = n
    ul_item()
}

# replace " with prettier Unicode open/close double quotes
/"/ {
    while (match($0, "\"")) {
	sub("\"", "\\&#8220;")
	sub("\"", "\\&#8221;")
    }
}

/''/ {
    while (match($0, "''")) {
	sub("''", "<emphasis>")
	sub("''", "</emphasis>")
    }
}

# headings

/^ *===.*===$/ {
    gsub(" *=== *","")
    close_until(2)
    open_section("section")
    print "<title>"$0"</title>"
    next
}

/^ *==.*==$/ {
    gsub(" *== *","")
    close_until(1)
    open_section("section")
    print "<title>"$0"</title>"
    next
}

/^ *=.*=$/ {
    gsub(" *= *","")
    close_until(0)
    open_section("chapter")
    print "<title>"$0"</title>"
    next
}

# links
/\[\[/ {
    gsub("\\[\\[", "<ulink url=\"")
    gsub("]\\[", "\">")
    gsub("]]", "</ulink>")
}

# default = paragraph
{
    if (!was_list_item) {
	close_lists()
    }
    was_list_item = 0
    in_block("para")
    print $0
}

END {
    close_until(0)
}
